name: Deploy Demo
on:
  push:
    branches:
      - release
  pull_request:
    branches: [ 'develop' ]
jobs:
  build-demo-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Set branch name
        run: echo "BRANCH=$GITHUB_REF" >> $GITHUB_ENV

      - name: Set contextual vars
        run: |
          if [ "$BRANCH" = "refs/heads/release" ]; then
            echo "BUCKET=optic-demo-website-production" >> $GITHUB_ENV
            echo "SITE_URL=https://demo.useoptic.com" >> $GITHUB_ENV
            echo "CLOUDFRONT_DIST=E1OKG70IUZ446Q" >> $GITHUB_ENV
          else
            echo "BUCKET=optic-demo-website-staging" >> $GITHUB_ENV
            echo "SITE_URL=https://demo.o3c.info" >> $GITHUB_ENV
            echo "CLOUDFRONT_DIST=E937BFTMG9NX3" >> $GITHUB_ENV
          fi

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@1417e62aeacec5e7fbe447bb7712d50847507342 # v1.5.4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-1"
      - uses: actions/setup-node@56899e050abffc08c2b3b61f3ec6a79a9dc3223d # v1.4.4
        with:
          node-version: 12
      - name: Checkout Optic Repository
        uses: actions/checkout@a81bbbf8298c0fa03ea29cdc473d45769f953675 # v2.3.3
        with:
            token: ${{ github.token }}
      - name: Install Dependencies and Build Optic
        run:  |
          source ./sourceme.sh
          optic_build_for_release
      - name: Build Demo Site
        run: yarn build-demo
        env:
          PUBLIC_URL: ${{ env.SITE_URL }}
          CI: false # required since otherwise the warnings in react cause a fail to compile

      # `--acl=public-read` is neceesary because the prod account is uploading the files to the staging bucket,
      # which prevents the default bucket policy from applying to these objects
      - name: Upload to S3
        run: |
          aws s3 sync workspaces/ui/build/ "s3://$BUCKET/" \
            --sse=AES256 \
            --acl=public-read \
            --exclude=*.wasm
            --delete
          aws s3 sync workspaces/ui/build/ "s3://$BUCKET/" \
            --sse=AES256 \
            --acl=public-read \
            --include=*.wasm \
            --content-type=application/wasm
            --delete
